{
  "$id":"https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/livePresenterExperiment.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Description of a live presenter experiment.",
  "type": "object",
  "TODOS": [
    "1. Review the convetion for the status for the experiment.",
    "2. Change metrics to have values extracted from ontologies."
  ],
    "QUESTIONS":[
  ],
  "definitions": {

    "livePresenterExperimentBase": {
      "$id": "#livePresenterExperimentBase",
      "properties":{
        "docType":{
          "description": "Constant doc type",
          "type":"string",
          "enum": ["livePresenterExperiment"]
        },
        "owner":{
          "description": "Owner the experiment.",
          "type":"string"
        },
        "description":{
          "description": "Description of the experiment",
          "type":"string"
        },
        "question":{
          "description": "Question of the experiment",
          "type":"string"
        },
        "hypothesis":{
          "description": "hypothesis of the experiment",
          "type":"string"
        },
        "creationDate":{
          "description": "Date of creation of the experiment.",
          "type":"string"
        },
        "uuid":{
          "description": "UUID of the experiment in SPINE.",
          "type":"string"
        },
        "revisionId":{
          "description": "Revision id of the experiment in SPINE.",
          "type":"string"
        },
        "modificationDate":{
          "description": "Date of modification of the experiment.",
          "type":"string"
        },
        "modifiedBy":{
          "description": "User that modified the experiment.",
          "type":"string"
        },
        "status":{
          "description": "Status of the experiment.",
          "type":"string",
          "enum": ["DRAFT","REVIEW","EXECUTION","COMPLETED","TRASHED"]
        },
        "privacy": {
          "description": "Privacy of the experiment.",
          "$ref": "core.schema.json#/definitions/privacyExperiment"
        },
        "reference": {
          "type": "object",
          "properties": {
            "projectId": {
              "type":"string"
            }
          },
          "required": ["projectId"]
        },
        "dataDescription": {
          "type": "object",
          "properties": {
            "clinical": {
              "type":"object"
            },
            "measurement": {
              "type":"object"
            }
          }
        },
        "clinical": {
          "type": "object"
        },
        "workflowId":{
          "description": "id of the workflow to instanciate",
          "type":"string"
        },
        "miniWorkflowSetId":{
          "description": "id of the mini wf set to use with the workflow",
          "type":"string"
        },
        "input" : {
          "description": "List of cases.",
          "$ref": "#/definitions/input"
        },
        "multiCaseConfig": {
          "description": "Configuration for \"multicase\" workflow.",
          "$ref": "#/definitions/multiCaseConfig"
        },
        "caseDistribution": {
          "description": "Case distribution policy",
          "$ref": "#/definitions/caseDistribution"
        },
        "centers": {
          "description": "Definition of the centers for map skill",
          "$ref": "#/definitions/centers"
        },
        "scoring": {
          "description": "Definition of the correct answers for the scoring.",
          "$ref": "#/definitions/scoring"
        },
        "scoringMethod": {
          "description": "Definition of the scoring method.",
          "$ref": "#/definitions/scoringMethod"
        },
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        }

      },
      "required": [
        "docType",
        "creationDate",
        "description",
        "question",
        "hypothesis",
        "privacy",
        "status",
        "reference",
        "owner",
        "modificationDate",
        "modifiedBy",
        "dataDescription",
        "workflowId",
        "miniWorkflowSetId",
        "input",
        "caseDistribution"
      ],
      "additionalProperties": false

  },
    "input" : {
      "$id": "#input",
      "type": "object",
      "patternProperties": {
        ".": {
          "type": "object",
          "description": "An object representing a case",
          "patternProperties": {
            ".": {
              "type": "object",
              "description": "An object representing an input",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "value for the input"
                }
              },
              "required": ["value"],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "multiCaseConfig": {
      "$id": "#multiCaseConfig",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "The inputs name",
          "patternProperties": {
            ".": {
              "type": "object",
              "description": "An object representing an input",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "multicase config input type",
                  "enum": ["PROPERTY_NAME_WITH_INDEX", "ARRAY"]
                }
              },
              "required": ["type"],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "caseDistribution": {
      "$id": "#caseDistribution",
      "type": "object",
      "properties": {
        "rules": {
          "type": "array"
          "items": {

          }
        },
        "pool": {
          "type": "object"
          "properties": {

          }
        },
        "maxContributionPerCase": {
          "type": "number"
        },
        "maxContributionPerCasePerUser": {
          "type": "number"
        }
      },
      "required": ["pool"],
      "additionalProperties": false
    },
    "centers": {
      "$id": "#centers",
      "type": "object",
      "properties": {

      }
    },
    "scoring": {
      "$id": "#scoring",
      "type": "object",
      "properties": {

      }
    },
    "scoringMethod": {
      "$id": "#scoringMethod",
      "type": "object",
      "properties": {

      }
    }

  }

}
