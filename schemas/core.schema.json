{
  "$id":"https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/core.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SPINE Core",
  "TODO": [
    "Filter schema is to be defined.",
    "Metadata schema is to be defined.",
    "Reference schema is to be defined."
  ],
    "QUESTIONS":[
    "ALF - As we don't deal anymore with T1 or T2 images, instead we deal with filters, can we set the imageEntityIO_Type as Anatomical, Functional, DWI, DiscreteLabelMap, ProbabilisticLabelMap?"
  ],
  "definitions": {

    "basicType":{
      "$id" : "#basicType",
      "description": "Basic system types",
      "type": "string",
      "enum": ["String", "Number", "Boolean", "File"]
    },

    "spineType": {
      "$id" : "#spineType",
      "description": "SPINE Type",
      "type": "string",
      "QUESTIONS":[
        "ALF - What is the lookuptable created for? In this a file, e.g, json file?",
        "ALF - If we have imageEntity as a spineType, can we have visit or clinical variables as spineType? Does it make sense?",
        "If the input is a list, for instance a list of imageEntity, how can we handle different types of formats? For instance if some come in .gz but others in nii.gz.",
        "ALF - I feel idInDescriptor in the spineInput/spineOutput can actually only be used in task and workflow. I am trying to use it in the tool but I don't have that property. I propose to remove it from the definition and create an extended defintion. An example of extention is in tool.schema.json/#definitions/inputsAnnotationTool"
      ],
      "enum": ["String","Number","imageFile","imageEntityInOut","auxiliaryImageFile","lookupTable","roiInOut","annotationInOut"]
    },

    "imageEntityInOut_Type": {
      "$id" : "#imageEntityInOut_Type",
      "description": "SPINE Image Type",
      "type": "string",
      "enum": ["T1w","T2w","T2star","T1map","T2map", "FLAIR", "PDT2","PDmap",
        "ANATOMICAL", "FUNCTIONAL", "DWI","DiscreteLabelMap","ProbabilisticLabelMap"]
    },

    "imageEntityInOut_FileFormat": {
      "$id" : "#imageEntityInOut_FileFormat",
      "description": "Format of the file where an image entity is or can be stored",
      "type": "string",
      "enum": ["nii","nii.gz","dicom.gz","minc","nrrd","dicom"]
    },

    "imageEntityInOut": {
      "$id": "#imageEntityInOut",
      "description": "Schema defining an image entity as input or output",
      "type": "object",
      "properties":{
        "name": {
          "description": "Human readable name",
          "type": "string"
        },
        "description": {
          "description": "Human readable description",
          "type": "string"
        },
        "type":{
          "description": "SPINE type",
          "type": "string",
          "enum": ["imageEntityInOut"]
        },
        "imageEntityInOut_Type": {
          "$ref": "#/definitions/imageEntityInOut_Type"
        }
      },
      "require": ["name", "description", "type", "imageEntityInOut_Type"]
    },

    "auxiliaryImageFileType": {
      "$id" : "#auxiliaryImageFileType",
      "description": "SPINE Aux. Image Type",
      "type": "string",
      "enum": ["bvec","bval"]
    },

    "auxiliaryImageFileFormat": {
      "$id" : "#auxiliaryImageFileType",
      "description": "Possible formats of auxialiary image files",
      "type": "string",
      "enum": ["txt","tmf", "json"]
    },

    "auxiliaryImageFile": {
      "$id": "#auxiliaryImageFile",
      "description": "Schema defining an auxiliary image file as input or output",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "name": {
              "description": "Human readable name",
              "type": "string"
            },
            "description": {
              "description": "Human readable description",
              "type": "string"
            },
            "type":{
              "description": "SPINE type",
              "type": "string",
              "enum": ["auxiliaryImageFile"]
            }
          }
        },
        {"$ref": "#/definitions/auxiliaryImageFileType"},
        {"$ref": "#/definitions/auxiliaryImageFileFormat"}
      ]
    },

    "roiInOut_FileFormat": {
      "$id" : "#roiInOut_FileFormat",
      "description": "Possible formats of ROI in and outputs files",
      "type": "string",
      "enum": ["json"]
    },

    "roiInOut":{
      "$id": "#roiInOut",
      "description": "Schema defining an ROI as input or output",
      "type": "object",
      "properties": {
        "name": {
          "description": "Human readable name",
          "type": "string"
        },
        "description": {
          "description": "Human readable description",
          "type": "string"
        },
        "type":{
          "description": "SPINE type",
          "type": "string",
          "enum": ["roiInOut"]
        },
        "schema":{
          "description": "Schema to be used for the format of the ROI",
          "type": "string",
          "enum": ["https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/roi.schema.json"]
        },
        "roiInOut_FileFormat": {"$ref": "#/definitions/roiInOut_FileFormat"}
      },
      "required": ["name", "description", "type", "roiInOut_FileFormat", "schema"]
    },

    "annotationInOut_FileFormat": {
      "$id" : "#annotationInOut_FileFormat",
      "description": "Possible formats of annotation in and outputs files",
      "type": "string",
      "enum": ["json"]
    },

    "annotationInOut":{
      "$id": "#annotationInOut",
      "description": "Schema defining an annotation as input or output",
      "type": "object",
      "properties": {
        "name": {
          "description": "Human readable name",
          "type": "string"
        },
        "description": {
          "description": "Human readable description",
          "type": "string"
        },
        "type":{
          "description": "SPINE type",
          "type": "string",
          "enum": ["annotationInOut"]
        },
        "schema":{
          "description": "Schema to be used for the format of the annotation",
          "type": "string",
          "enum": ["https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/annotation.schema.json"]
        },
        "annotationInOut_FileFormat": {"$ref": "#/definitions/annotationInOut_FileFormat"}
      },
      "required": ["name", "description", "type", "annotationInOut_FileFormat"]
    },

    "format": {
      "$id" : "#format",
      "description": "Format of the file.",
      "type": "string",
      "enum": ["nii","nii.gz","dicom.gz","minc","nrrd","dicom","json"]
    },

    "filter": {
      "$id" : "#filter",
      "description": "Filter for inputs. TO BE DEFINED",
      "type": "object"
    },

    "input": {
      "$id" : "#input",
      "description": "Definition of a general input",
      "type": "object",
      "patternProperties" : {
        ".*" : {
          "properties": {
            "name": {
              "description":"Human readable name for the input",
              "type":"string"
            },
            "description": {
              "description":"Human readable description for the input",
              "type":"string"
            },
            "isList": {
              "description":"True if the Input is a list.",
              "type":"boolean"
            },
            "type": {
              "description":"Type of the input.",
              "$ref":"#/definitions/basicType"
            }
          }
        }
      }
    },

    "spineInput": {
      "$id" : "#spineInput",
      "description": "SPINE definition for inputs.",
      "type": "object",
      "patternProperties" : {
        ".*" : {
          "properties": {
            "isList": {
              "description":"True if the Input is a list.",
               "type":"boolean"
            },
            "filter":{
              "description":"Filter for this input based on input parameters",
              "$ref":"#/definitions/filter"
            }
          },
          "required": ["isList"],
          "oneOf":[
            {"$ref": "#/definitions/imageEntityInOut"},
            {"$ref": "#/definitions/auxiliaryImageFile"},
            {"$ref": "#/definitions/roiInOut"},
            {"$ref": "#/definitions/annotationInOut"}
          ]
        }
      }
    },

    "spineOutput": {
      "$id" : "#spineOutput",
      "description": "SPINE definition for outputs",
      "type": "object",
      "patternProperties" : {
        ".*" : {
          "properties": {
            "isList": {
              "description":"True if the Ouput is a list.",
               "type":"boolean"
            },
            "metadata": {
              "description":"Metadata to add to the output",
              "type":"object"
            },
            "reference": {
              "description":"Reference to add to the output",
              "type":"object"
            }
          },
          "required": ["isList"],
          "oneOf":[
            {"$ref": "#/definitions/imageEntityInOut"},
            {"$ref": "#/definitions/auxiliaryImageFile"},
            {"$ref": "#/definitions/roiInOut"},
            {"$ref": "#/definitions/annotationInOut"}
          ]
        }
      }
    }

  }
}
