{
  "$id":"https://raw.githubusercontent.com/SPINEProject/SPINE-json-schema/master/schemas/experiment.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Description of an experiment.",
  "type": "object",
  "TODOS": [
    "1. Review the convetion for the status for the experiment.",
    "2. Change metrics to have values extracted from ontologies."
  ],
    "QUESTIONS":[
  ],
  "definitions": {

    "operator": {
      "$id": "#operator",
      "decription": "Description of an operators",
      "type": "object",
      "properties":{
        "label": {
          "description": "Label of the operator",
          "type": "string"
        },
        "value": {
          "description": "Value of the operator",
          "type": "string"
        }
      },
      "required": ["label", "value"]
    },

    "operatorLessThan": {
      "$id": "#operatorLessThan",
      "properties":{
        "label":{
          "enum": ["<"]
        },
        "value":{
          "enum": ["less than"]
        }
      },
      "required": ["label", "value"]
    },

    "operatorLesserEqual": {
      "$id": "#operatorLesserEqual",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["<="]
            },
            "value":{
              "enum": ["less than or equal to"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorEqual": {
      "$id": "#operatorEqual",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["="]
            },
            "value":{
              "enum": ["equals"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorNotEqual": {
      "$id": "#operatorNotEqual",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["!="]
            },
            "value":{
              "enum": ["not equals"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorGreaterEqual": {
      "$id": "#operatorGreaterEqual",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": [">="]
            },
            "value":{
              "enum": ["greater than or equal to"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorGreaterThan": {
      "$id": "#operatorGreaterThan",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": [">"]
            },
            "value":{
              "enum": ["greater than"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorContains": {
      "$id": "#operatorContains",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["contains"]
            },
            "vale":{
              "enum": ["contains"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorDoesNotContains": {
      "$id": "#operatorDoesNotContains",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["does not contain"]
            },
            "value":{
              "enum": ["does not contain"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorAND": {
      "$id": "#operatorAND",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["AND"]
            },
            "value":{
              "enum": ["AND"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorOR": {
      "$id": "#operatorOR",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["OR"]
            },
            "value":{
              "enum": ["OR"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "operatorXOR": {
      "$id": "#operatorXOR",
      "allOf": [
        {
          "properties":{
            "label":{
              "enum": ["XOR"]
            },
            "value":{
              "enum": ["XOR"]
            }
          },
          "required": ["label", "value"]
        }
      ]
    },

    "ordinalOperator": {
      "$id": "#ordinalOperator",
      "description": "Ordinal operator",
      "type": "object",
      "properties":{
        "type":{
          "type": "string",
          "enum": ["ORDINAL_OPERATOR"]
        }
      },
      "required": ["type"],
       "oneOf":[
        {"$ref": "#/definitions/operatorLessThan"},
        {"$ref": "#/definitions/operatorLesserEqual"},
        {"$ref": "#/definitions/operatorEqual"},
        {"$ref": "#/definitions/operatorNotEqual"},
        {"$ref": "#/definitions/operatorGreaterEqual"},
        {"$ref": "#/definitions/operatorGreaterThan"}
      ]
    },

    "logicalOperator": {
      "$id": "#logicalOperator",
      "description": "Logical operator",
      "type": "object",
      "properties":{
        "type":{
          "type": "string",
          "enum": ["LOGICAL_OPERATOR"]
        }
      },
      "required": ["type"],
      "oneOf":[
        {"$ref": "#/definitions/operatorAND"},
        {"$ref": "#/definitions/operatorOR"},
        {"$ref": "#/definitions/operatorXOR"}
      ]
    },

    "categoricalOperator": {
      "$id": "#categoricalOperator",
      "description": "Ordinal operator",
      "type": "object",
      "properties":{
        "type":{
          "type": "string",
          "enum": ["CATEGORICAL_OPERATOR"]
        }
      },
      "required": ["type"],
      "oneOf":[
        {"$ref": "#/definitions/operatorEqual"},
        {"$ref": "#/definitions/operatorNotEqual"}
      ]
    },

    "textualOperator": {
      "$id": "#textualOperator",
      "description": "Textual operator",
      "type": "object",
      "properties":{
        "type":{
          "type": "string",
          "enum": ["TEXTUAL_OPERATOR"]
        }
      },
      "required": ["type"],
      "oneOf":[
        {"$ref": "#/definitions/operatorContains"},
        {"$ref": "#/definitions/operatorDoesNotContains"}
      ]
    },

    "clinicalCriterion": {
      "$id": "#clinicalCriterion",
      "description": "clinicalCriterion",
      "type": "object",
      "properties": {
        "variableId": {
          "description": "Id of the clinical variable to be filtered.",
          "type": "string"
        },
        "operator": {
          "oneOf":[
            {"$ref": "#/definitions/ordinalOperator"},
            {"$ref": "#/definitions/categoricalOperator"},
            {"$ref": "#/definitions/textualOperator"}
          ]
        },
        "value": {
          "description": "Value for the criterion.",
          "type": "string"
        },
        "timeFrame":{
          "$ref": "#/definitions/timeFrame_withRespectToReferenceDate"
        }
      },
      "required": ["variableId","operator","value","timeFrame"]
    },

    "criterion": {
      "$id": "#criterion",
      "description": "Criterion",
      "type": "object",
      "properties": {
        "variableId": {
          "description": "Id of the variable to be filtered.",
          "type": "string"
        },
        "operator": {
          "oneOf":[
            {"$ref": "#/definitions/ordinalOperator"},
            {"$ref": "#/definitions/categoricalOperator"},
            {"$ref": "#/definitions/textualOperator"}
          ]
        },
        "value": {
          "description": "Value for the criterion.",
          "type": "string"
        }
      }
    },

    "expression": {
      "$id": "#expression",
      "description": "Expression",
      "type": "object",
      "properties":{
        "logicalOperator":{
          "description": "Logical operator ruling the expression. For instance if the logical operator is AND, then all the expression will AND all the criteria and expressions, e.g., Criteria_1 AND Criteria_2 AND Expression_1 AND Expression_2",
          "$ref": "#/definitions/logicalOperator"
        },
        "criteria": {
          "description": "List of criteria in the expression. For now it is only clinicalCriterion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/clinicalCriterion"
          }
        },
        "expressions":{
          "description": "List of expression in the expression.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/expression"
          }
        }
      },
      "required": ["logicalOperator", "criteria", "expressions"]
    },

    "entityType":{
      "$id": "#entityType",
      "description": "Type of entity for the variable",
      "type": "string",
      "enum": ["SUBJECT", "ANATOMICAL", "PATHOLOGICAL"]
    },

    "systemVariableForStatisticalModel":{
      "$id": "#systemVariableForStatisticalModel",
      "description": "System variable for statistical models",
      "type": "object",
      "properties": {
        "entityType": {
          "$ref": "#/definitions/entityType"
        }
      },
      "required": ["entityType"]
    },

    "systemVariableForStatisticalModel_subject":{
      "$id": "#systemVariableForStatisticalModel_subject",
      "description": "System variable, extracted from the clinical data of the subject, for statistical models",
      "type": "object",
      "allOf":[
        {
          "properties":{
            "entityType": {
              "type": "string",
              "enum": ["SUBJECT"]
            },
            "clinicalVariableId": {
              "description": "Id of the clinical variable.",
              "type": "string"
            }
          }
        }
      ]
    },

    "systemVariableForStatisticalModel_imaging_pathological":{
      "$id": "#systemVariableForStatisticalModel_imaging_pathological",
      "description": "System variable, extracted from annotations of an ROI using imaging, for statistical models",
      "allOf":[
        { 
          "$ref": "#/definitions/systemVariableForStatisticalModel"
        },
        {
          "properties":{
            "entityType": {
              "enum": ["PATHOLOGICAL"]
            },
            "metricAnnotation": {
              "description": "Metric or measurement to be calculated.",
              "type": "object",
              "properties": {
                "ontologyId": {
                  "description": "Id of the pathological ontology where the value of the annotation is retrieved.",
                  "type": "string"
                },
                "ontologyClassId": {
                  "description": "Id of the class in the pathological ontology selected for the annotation.",
                  "type": "string"
                }
              }
            },
            "pathologicalAnnotation":{
              "description": "Description of the patholocial annotation",
              "type": "object",
              "properties": {
                "ontologyId": {
                  "description": "Id of the pathological ontology where the value of the annotation is retrieved.",
                  "type": "string"
                },
                "ontologyClassId": {
                  "description": "Id of the class in the pathological ontology selected for the annotation.",
                  "type": "string"
                }
              }
            },
            "anatomicalAnnotation":{
              "description": "Description of the anatomical annotation",
              "ontologyId": {
                "description": "Id of the anatomical ontology where the value of the annotation is retrieved.",
                "type": "string"
              },
              "ontologyClassId": {
                "description": "Id of the class in the anatomical ontology selected for the annotation.",
                "type": "string"
              }
            },
            "workflowId": {
              "description": "Id of the workflow selected to get the variable",
              "type": "string"
            }
          }
        }
      ]
    },

    "systemVariableForStatisticalModel_imaging_anatomical":{
      "$id": "#systemVariableForStatisticalModel_imaging_anatomical",
      "description": "System variable, extracted from annotations of an ROI using imaging, for statistical models",
      "allOf":[
        { 
          "$ref": "#/definitions/systemVariableForStatisticalModel"
        },
        {
          "properties":{
            "entityType": {
              "enum": ["ANATOMICAL"]
            },
            "metricAnnotation": {
              "description": "Metric or measurement to be calculated.",
              "type": "object",
              "properties": {
                "ontologyId": {
                  "description": "Id of the pathological ontology where the value of the annotation is retrieved.",
                  "type": "string"
                },
                "ontologyClassId": {
                  "description": "Id of the class in the pathological ontology selected for the annotation.",
                  "type": "string"
                }
              }
            },
            "anatomicalAnnotation":{
              "description": "Description of the anatomical annotation",
              "ontologyId": {
                "description": "Id of the anatomical ontology where the value of the annotation is retrieved.",
                "type": "string"
              },
              "ontologyClassId": {
                "description": "Id of the class in the anatomical ontology selected for the annotation.",
                "type": "string"
              }
            },
            "workflowId": {
              "description": "Id of the workflow selected to get the variable",
              "type": "string"
            }
          }
        }
      ]
    },

    "units": {
      "$id": "#units",
      "type": "string",
      "enum": ["DAY", "WEEK", "MONTH", "YEAR"]
    },

    "targetDate": {
      "$id": "#targetDate",
      "type": "object",
      "properties": {
        "distance": {
          "type": "number"
        },
        "units": {
          "$ref": "#/definitions/units"
        }
      }
    },

    "toleranceWindow": {
      "$id": "#toleranceWindow",
      "type": "object",
      "properties":{
        "leftLimit": {
          "description": "Left limit for the tolerance window.",
          "type": "number",
          "minimun": 0
        },
        "leftUnits":{
          "$ref": "#/definitions/units"
        },
        "rightLimit": {
          "description": "Right limit for the tolerance window.",
          "type": "number",
          "minimun": 0
        },
        "rightUnits":{
          "$ref": "#/definitions/units"
        }
      },
      "required": ["leftLimit","leftUnits","rightLimit","rightUnits"]
    },

    "toleranceWindow_betweenVariables": {
      "$id": "#toleranceWindow_betweenVariables",
      "type": "object",
      "properties":{
        "variableRelativeFrom": {
          "description": "Name of the variable the tolerance window is relative to",
          "type": "string"
        },
        "variableRelativeTo": {
          "description": "Name of the variable the tolerance window is relative to",
          "type": "string"
        },
        "relationType": {
          "description":"Relation inside, i.e., Can be,  or outside, i.e., Cannot be,  the time-window",
          "type": "string",
          "enum": ["CAN_BE", "CANNOT_BE"]
        },
        "toleranceWindow": {
          "$id": "#toleranceWindow"
        }
      }
    },

    "toleranceWindow_relativeToVariable": {
      "$id": "#toleranceWindow_relativeToVariable",
      "type": "object",
      "properties":{
        "variableRelativeTo": {
          "description": "Name of the variable the tolerance window is relative to",
          "type": "string"
        },
        "relationType": {
          "description":"Relation inside, i.e., Can be,  or outside, i.e., Cannot be,  the time-window",
          "type": "string",
          "enum": ["CAN_BE", "CANNOT_BE"]
        },
        "toleranceWindow": {
          "$id": "#toleranceWindow"
        }
      }
    },

    "targetDate_toleranceWindow": {
      "$id": "#targetDate_toleranceWindow",
      "description": "Defintion of target and tolerance window.",
      "type": "object",
      "properties": {
        "targetDate": {
          "$id": "#/definitions/targetDate"
        },
        "toleranceWindow": {
          "$ref": "#/definitions/toleranceWindow"
        }
      }
    },

    "variableReferenceTimePoint":{
      "description": "Reference time-point to a given variable, for instance second attack.",
      "type": "object",
      "properties": {
        "variableReference": {
          "description": "Variable serving as reference for the timepoint, for instance Attack_date.",
          "type": "string"
        },
        "ocurrencePosition":{
          "description": "Ocurrence position of the time-point, for instance first ocurrence.",
          "type": "integer",
          "minimun": 1
        }
      },
      "required": ["variableReference"]
    },

    "timeFrame_withRespectToReferenceDate": {
      "$id": "#timeFrame_withRespectToReferenceDate",
      "description": "Time-frame definition with reference to a time-point",
      "allOf": [
        {"$ref": "#/definitions/targetDate_toleranceWindow"},
        {
          "properties": {
            "referenceTimeFrame":{
              "description": "Primary time reference of the experiment",
              "type": "string",
              "enum": ["DOB", "First Attack", "NONE"]
            }
          }
        }
      ]
    },

    "timeFrame_otherVariableTimeStamp": {
      "$id": "#timeFrame_otherVariableTimeStamp",
      "description": "Target date definition with reference to the time stamp of other variable",
      "allOf": [
        {"$ref": "#/definitions/targetDate_toleranceWindow"},
        {
          "properties": {
            "relativeTo": {
              "description": "Reference time point for this date",
              "type": "string",
              "enum": ["DIFFERENT_VARIABLE_TIME_STAMP"]
            },
            "referenceVariable":{
              "description": "Variable serving as reference for the timepoint, for instance Attack_date.",
              "type": "string"
            }
          }
        }
      ]
    },

    "timeFrame_allTimePoints": {
      "$id": "#timeFrame_allTimePoints",
      "description": "Time frame defining all possible time points",
      "allOf": [
        {"$ref": "#/definitions/targetDate_toleranceWindow"},
        {
          "properties": {
            "type":{
              "description": "Type of time-frame",
              "type": "string",
              "enum": ["ALL_TIME_POINTS"]
            }
          }
        }
      ]
    },

    "experiment__POST":{
      "$id": "#experiment__POST",
      "decription": "Experiment when posted",
      "type": "object",
      "properties":{
        "hypothesis": {
          "description": "Hypothesis of the experiment",
          "type":"string",
          "minLength": 1
        },
        "description": {
          "description": "Description of the experiment",
          "type":"string",
          "minLength": 1
        },
        "question": {
          "description": "Question of the experiment",
          "type":"string",
          "minLength": 1
        },
        "projectId": {
          "description": "Id of the project where the experiment will belong.",
          "type":"string",
          "minLength": 1
        },
        "privacy": {
          "description": "Privay of the experiment.",
          "$ref": "core.schema.json#/definitions/privacyExperiment"
        }
      },
      "required": ["hypothesis", "description", "question", "projectId", "privacy"]
    }

  },
  "allOf":[
    {"$ref":"#/definitions/experiment__POST"},
    {
      "properties":{
        "owner":{
          "description": "Owner the experiment.",
          "type":"string"
        },
        "creationDate":{
          "description": "Date of creation of the experiment.",
          "type":"string"
        },
        "uuid":{
          "description": "UUID of the experiment in SPINE.",
          "type":"string"
        },
        "revisionId":{
          "description": "Revision id of the experiment in SPINE.",
          "type":"string"
        },
        "modificationDate":{
          "description": "Date of modification of the experiment.",
          "type":"string"
        },
        "modifiedBy":{
          "description": "User that modified the experiment.",
          "type":"string"
        },
        "status":{
          "description": "Status of the experiment.",
          "type":"string",
          "enum": ["DRAFT","REVIEW","EXECUTION","COMPLETED","TRASHED"]
        },
        "cohortIds":{
          "description": "List of ids of the cohorts used in the experiment.",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "selectionCriteria":{
          "description": "Selection criteria for the experiment",
          "type": "object",
          "properties":{
            "inclusion":{
              "description": "Expression defining the inclusion criteria",
              "$ref": "#/definitions/expression"
            },
            "exclusion":{
              "description": "Expression defining the exclusion criteria",
              "$ref": "#/definitions/expression"
            }
          },
          "required": ["inclusion","exclusion"]
        },
        "statisticalModelId": {
          "description": "Id of the statistical in the system",
          "type": "string"
        },
        "systemVariablesForStatisticalModel": {
          "description": "Variables from the system assigned to the variables of the statistical model.",
          "type":"object",
          "patternProperties" : {
            ".*" : {
              "oneOf": [
                {"$ref": "#/definitions/systemVariableForStatisticalModel_subject"},
                {"$ref": "#/definitions/systemVariableForStatisticalModel_imaging_pathological"},
                {"$ref": "#/definitions/systemVariableForStatisticalModel_imaging_anatomical"}
              ]
            }  
          }
        },
        "timeFrame": {
          "description": "Time frame description for the variables of the statistical model. Each key correspond to the one of the keys in systemVariablesForStatisticalModel.",
          "type": "object"
        }
      },
      "required": ["owner", "creationDate", "uuid", "revisionId", 
        "modificationDate", "modifiedBy", "status", "cohortIds",
        "selectionCriteria", "statisticalModelId",
        "systemVariablesForStatisticalModel", "timeFrame"]
    }
  ]
}
